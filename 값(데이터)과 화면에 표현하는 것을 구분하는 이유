값(데이터)과 화면(UI)을 구분해서 구현하는 것은 유지보수, 확장성, 테스트를 쉽게 만들기 위해서이다

1. 유지보수: 데이터 로직이 화면 코드와 뒤섞여 있으면 나중에 수정할 때 어디를 고쳐야 할지 헷갈리기때문에 데이터만 수정하거나 화면만 수정할 수 있게 분리하면 각각을 따로 관리하기 쉽다

2. 확장성: 앱이 커질수록 "데이터"를 사용하는 화면이 여러 개 생길 수 있고 이때 데이터 부분이 따로 분리되어 있으면 여러 화면에서 같은 데이터를 쉽게 공유하거나 관리할 수 있다

3. 테스트: 데이터 처리 로직을 화면 코드랑 섞어두면 자동화 테스트하기가 힘들기 때문에 데이터 부분만 분리하면 별도로 테스트할 수 있어서 버그를 빨리 잡을 수 있다

4. 가독성: 화면을 그리는 부분은 화면만, 데이터는 데이터만 따로 다루면 코드가 훨씬 읽기 쉬워진다 "이 파일은 화면 담당", "이 파일은 데이터 담당" 이렇게 역할이 명확해진다
